---
import "../styles/global.css";
import Card from "./Card.astro";
---

<section
  class="section w-full h-screen flex items-center pt-20"
  data-header-color="black"
>
  <!-- Left half - empty space for content -->
  <div class="w-1/2"></div>

  <!-- Right half - Card Slider -->
  <div class="w-1/2 flex justify-center items-center">
    <div class="relative max-w-sm">
      <!-- Slider Container -->
      <div id="cardSlider" class="overflow-hidden">
        <div
          id="cardTrack"
          class="flex transition-transform duration-500 ease-in-out"
        >
          <div class="w-full flex-shrink-0">
            <Card />
          </div>
          <div class="w-full flex-shrink-0">
            <Card />
          </div>
          <div class="w-full flex-shrink-0">
            <Card />
          </div>
        </div>
      </div>

      <!-- Navigation Buttons -->
      <button
        id="prevBtn"
        class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white text-blue-600 rounded-full p-2 shadow-lg transition-all duration-200 hover:shadow-xl"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>

      <button
        id="nextBtn"
        class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white text-blue-600 rounded-full p-2 shadow-lg transition-all duration-200 hover:shadow-xl"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="9 5l7 7-7 7"></path>
        </svg>
      </button>

      <!-- Dots Indicator -->
      <div class="flex justify-center mt-6 space-x-2">
        <button
          class="dot w-3 h-3 rounded-full bg-blue-600 transition-all duration-200"
          data-slide="0"></button>
        <button
          class="dot w-3 h-3 rounded-full bg-blue-300 hover:bg-blue-400 transition-all duration-200"
          data-slide="1"></button>
        <button
          class="dot w-3 h-3 rounded-full bg-blue-300 hover:bg-blue-400 transition-all duration-200"
          data-slide="2"></button>
      </div>
    </div>
  </div>
</section>

<script>
  let currentSlide = 0;
  const totalSlides = 3;

  const cardTrack = document.getElementById("cardTrack");
  const prevBtn = document.getElementById("prevBtn");
  const nextBtn = document.getElementById("nextBtn");
  const dots = document.querySelectorAll(".dot");

  function updateSlider() {
    if (!cardTrack) return; // Guard clause for null check

    const translateX = -currentSlide * 100;
    cardTrack.style.transform = `translateX(${translateX}%)`;

    // Update dots
    dots.forEach((dot, index) => {
      if (index === currentSlide) {
        dot.classList.remove("bg-blue-300");
        dot.classList.add("bg-blue-600");
      } else {
        dot.classList.remove("bg-blue-600");
        dot.classList.add("bg-blue-300");
      }
    });
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    updateSlider();
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
    updateSlider();
  }

  function goToSlide(slideIndex: number) {
    currentSlide = slideIndex;
    updateSlider();
  }

  // Event listeners
  nextBtn?.addEventListener("click", nextSlide);
  prevBtn?.addEventListener("click", prevSlide);

  dots.forEach((dot, index) => {
    dot.addEventListener("click", () => goToSlide(index));
  });

  // Auto-play (optional)
  setInterval(nextSlide, 5000);
</script>
